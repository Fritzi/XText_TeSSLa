/*
 * generated by Xtext 2.12.0
 */
grammar InternalTeSSLa;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package de.uniluebeck.isp.tessla.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.uniluebeck.isp.tessla.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.uniluebeck.isp.tessla.services.TeSSLaGrammarAccess;

}
@parser::members {
	private TeSSLaGrammarAccess grammarAccess;

	public void setGrammarAccess(TeSSLaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getSpecAssignment()); }
		(rule__Model__SpecAssignment)*
		{ after(grammarAccess.getModelAccess().getSpecAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledefinition
entryRuledefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruledefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule definition
ruledefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparamList
entryRuleparamList
:
{ before(grammarAccess.getParamListRule()); }
	 ruleparamList
{ after(grammarAccess.getParamListRule()); } 
	 EOF 
;

// Rule paramList
ruleparamList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamListAccess().getAlternatives()); }
		(rule__ParamList__Alternatives)
		{ after(grammarAccess.getParamListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleout
entryRuleout
:
{ before(grammarAccess.getOutRule()); }
	 ruleout
{ after(grammarAccess.getOutRule()); } 
	 EOF 
;

// Rule out
ruleout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutAccess().getGroup()); }
		(rule__Out__Group__0)
		{ after(grammarAccess.getOutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulein
entryRulein
:
{ before(grammarAccess.getInRule()); }
	 rulein
{ after(grammarAccess.getInRule()); } 
	 EOF 
;

// Rule in
rulein 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInAccess().getGroup()); }
		(rule__In__Group__0)
		{ after(grammarAccess.getInAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpInfix
entryRuleexpInfix
:
{ before(grammarAccess.getExpInfixRule()); }
	 ruleexpInfix
{ after(grammarAccess.getExpInfixRule()); } 
	 EOF 
;

// Rule expInfix
ruleexpInfix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpInfixAccess().getGroup()); }
		(rule__ExpInfix__Group__0)
		{ after(grammarAccess.getExpInfixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpUnary
entryRuleexpUnary
:
{ before(grammarAccess.getExpUnaryRule()); }
	 ruleexpUnary
{ after(grammarAccess.getExpUnaryRule()); } 
	 EOF 
;

// Rule expUnary
ruleexpUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpUnaryAccess().getGroup()); }
		(rule__ExpUnary__Group__0)
		{ after(grammarAccess.getExpUnaryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpFunc
entryRuleexpFunc
:
{ before(grammarAccess.getExpFuncRule()); }
	 ruleexpFunc
{ after(grammarAccess.getExpFuncRule()); } 
	 EOF 
;

// Rule expFunc
ruleexpFunc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpFuncAccess().getAlternatives()); }
		(rule__ExpFunc__Alternatives)
		{ after(grammarAccess.getExpFuncAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpLit
entryRuleexpLit
:
{ before(grammarAccess.getExpLitRule()); }
	 ruleexpLit
{ after(grammarAccess.getExpLitRule()); } 
	 EOF 
;

// Rule expLit
ruleexpLit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpLitAccess().getAlternatives()); }
		(rule__ExpLit__Alternatives)
		{ after(grammarAccess.getExpLitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype
entryRuletype
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinfixOperator
entryRuleinfixOperator
:
{ before(grammarAccess.getInfixOperatorRule()); }
	 ruleinfixOperator
{ after(grammarAccess.getInfixOperatorRule()); } 
	 EOF 
;

// Rule infixOperator
ruleinfixOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInfixOperatorAccess().getAlternatives()); }
		(rule__InfixOperator__Alternatives)
		{ after(grammarAccess.getInfixOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunaryOperator
entryRuleunaryOperator
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleunaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule unaryOperator
ruleunaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDefinitionParserRuleCall_0()); }
		ruledefinition
		{ after(grammarAccess.getStatementAccess().getDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getOutParserRuleCall_1()); }
		ruleout
		{ after(grammarAccess.getStatementAccess().getOutParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getInParserRuleCall_2()); }
		rulein
		{ after(grammarAccess.getStatementAccess().getInParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSL_COMMENTTerminalRuleCall_3()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getStatementAccess().getSL_COMMENTTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getDefKeyword_0_0()); }
		'def'
		{ after(grammarAccess.getDefinitionAccess().getDefKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getDefineKeyword_0_1()); }
		'define'
		{ after(grammarAccess.getDefinitionAccess().getDefineKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getExpressionAssignment_5_0()); }
		(rule__Definition__ExpressionAssignment_5_0)
		{ after(grammarAccess.getDefinitionAccess().getExpressionAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup_5_1()); }
		(rule__Definition__Group_5_1__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamListAccess().getGroup_0()); }
		(rule__ParamList__Group_0__0)
		{ after(grammarAccess.getParamListAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getParamListAccess().getGroup_1()); }
		(rule__ParamList__Group_1__0)
		{ after(grammarAccess.getParamListAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
		(rule__Expression__Group_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
		(rule__Expression__Group_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpFuncAccess().getGroup_0()); }
		(rule__ExpFunc__Group_0__0)
		{ after(grammarAccess.getExpFuncAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpFuncAccess().getGroup_1()); }
		(rule__ExpFunc__Group_1__0)
		{ after(grammarAccess.getExpFuncAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpLit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpLitAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getExpLitAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpLitAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getExpLitAccess().getSTRINGTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpLitAccess().getINTTerminalRuleCall_2()); }
		RULE_INT
		{ after(grammarAccess.getExpLitAccess().getINTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpLitAccess().getLeftParenthesisRightParenthesisKeyword_3()); }
		'()'
		{ after(grammarAccess.getExpLitAccess().getLeftParenthesisRightParenthesisKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpLitAccess().getTrueKeyword_4()); }
		'true'
		{ after(grammarAccess.getExpLitAccess().getTrueKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpLitAccess().getFalseKeyword_5()); }
		'false'
		{ after(grammarAccess.getExpLitAccess().getFalseKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InfixOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInfixOperatorAccess().getPercentSignKeyword_0()); }
		'%'
		{ after(grammarAccess.getInfixOperatorAccess().getPercentSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getLessThanSignLessThanSignKeyword_1()); }
		'<<'
		{ after(grammarAccess.getInfixOperatorAccess().getLessThanSignLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_2()); }
		'>>'
		{ after(grammarAccess.getInfixOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
		'>='
		{ after(grammarAccess.getInfixOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getLessThanSignEqualsSignKeyword_4()); }
		'<='
		{ after(grammarAccess.getInfixOperatorAccess().getLessThanSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getLessThanSignKeyword_5()); }
		'<'
		{ after(grammarAccess.getInfixOperatorAccess().getLessThanSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getGreaterThanSignKeyword_6()); }
		'>'
		{ after(grammarAccess.getInfixOperatorAccess().getGreaterThanSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getExclamationMarkEqualsSignKeyword_7()); }
		'!='
		{ after(grammarAccess.getInfixOperatorAccess().getExclamationMarkEqualsSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getEqualsSignEqualsSignKeyword_8()); }
		'=='
		{ after(grammarAccess.getInfixOperatorAccess().getEqualsSignEqualsSignKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getAmpersandKeyword_9()); }
		'&'
		{ after(grammarAccess.getInfixOperatorAccess().getAmpersandKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getVerticalLineKeyword_10()); }
		'|'
		{ after(grammarAccess.getInfixOperatorAccess().getVerticalLineKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getCircumflexAccentKeyword_11()); }
		'^'
		{ after(grammarAccess.getInfixOperatorAccess().getCircumflexAccentKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getPlusSignKeyword_12()); }
		'+'
		{ after(grammarAccess.getInfixOperatorAccess().getPlusSignKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getHyphenMinusKeyword_13()); }
		'-'
		{ after(grammarAccess.getInfixOperatorAccess().getHyphenMinusKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getAsteriskKeyword_14()); }
		'*'
		{ after(grammarAccess.getInfixOperatorAccess().getAsteriskKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getInfixOperatorAccess().getSolidusKeyword_15()); }
		'/'
		{ after(grammarAccess.getInfixOperatorAccess().getSolidusKeyword_15()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getTildeKeyword_0()); }
		'~'
		{ after(grammarAccess.getUnaryOperatorAccess().getTildeKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2()); }
		'!'
		{ after(grammarAccess.getUnaryOperatorAccess().getExclamationMarkKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_0()); }
	(rule__Definition__Alternatives_0)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getDefAssignment_1()); }
	(rule__Definition__DefAssignment_1)
	{ after(grammarAccess.getDefinitionAccess().getDefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getParamListAssignment_2()); }
	(rule__Definition__ParamListAssignment_2)?
	{ after(grammarAccess.getDefinitionAccess().getParamListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getGroup_3()); }
	(rule__Definition__Group_3__0)?
	{ after(grammarAccess.getDefinitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
	rule__Definition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getColonEqualsSignKeyword_4()); }
	':='
	{ after(grammarAccess.getDefinitionAccess().getColonEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_5()); }
	(rule__Definition__Alternatives_5)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_3__0__Impl
	rule__Definition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getColonKeyword_3_0()); }
	':'
	{ after(grammarAccess.getDefinitionAccess().getColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getTypeAssignment_3_1()); }
	(rule__Definition__TypeAssignment_3_1)
	{ after(grammarAccess.getDefinitionAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_5_1__0__Impl
	rule__Definition__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getLeftCurlyBracketKeyword_5_1_0()); }
	'{'
	{ after(grammarAccess.getDefinitionAccess().getLeftCurlyBracketKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_5_1__1__Impl
	rule__Definition__Group_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getStatementsAssignment_5_1_1()); }
	(rule__Definition__StatementsAssignment_5_1_1)*
	{ after(grammarAccess.getDefinitionAccess().getStatementsAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_5_1__2__Impl
	rule__Definition__Group_5_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getExpressionAssignment_5_1_2()); }
	(rule__Definition__ExpressionAssignment_5_1_2)
	{ after(grammarAccess.getDefinitionAccess().getExpressionAssignment_5_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_5_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_5_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getRightCurlyBracketKeyword_5_1_3()); }
	'}'
	{ after(grammarAccess.getDefinitionAccess().getRightCurlyBracketKeyword_5_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0__0__Impl
	rule__ParamList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getParamListAction_0_0()); }
	()
	{ after(grammarAccess.getParamListAccess().getParamListAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0__1__Impl
	rule__ParamList__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getParamListAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0__2__Impl
	rule__ParamList__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getParamsAssignment_0_2()); }
	(rule__ParamList__ParamsAssignment_0_2)
	{ after(grammarAccess.getParamListAccess().getParamsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0__3__Impl
	rule__ParamList__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getGroup_0_3()); }
	(rule__ParamList__Group_0_3__0)?
	{ after(grammarAccess.getParamListAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0__4__Impl
	rule__ParamList__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getGroup_0_4()); }
	(rule__ParamList__Group_0_4__0)*
	{ after(grammarAccess.getParamListAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getRightParenthesisKeyword_0_5()); }
	')'
	{ after(grammarAccess.getParamListAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamList__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0_3__0__Impl
	rule__ParamList__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getColonKeyword_0_3_0()); }
	':'
	{ after(grammarAccess.getParamListAccess().getColonKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getTypesAssignment_0_3_1()); }
	(rule__ParamList__TypesAssignment_0_3_1)
	{ after(grammarAccess.getParamListAccess().getTypesAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamList__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0_4__0__Impl
	rule__ParamList__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getCommaKeyword_0_4_0()); }
	','
	{ after(grammarAccess.getParamListAccess().getCommaKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0_4__1__Impl
	rule__ParamList__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getParamsAssignment_0_4_1()); }
	(rule__ParamList__ParamsAssignment_0_4_1)
	{ after(grammarAccess.getParamListAccess().getParamsAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getGroup_0_4_2()); }
	(rule__ParamList__Group_0_4_2__0)?
	{ after(grammarAccess.getParamListAccess().getGroup_0_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamList__Group_0_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0_4_2__0__Impl
	rule__ParamList__Group_0_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getColonKeyword_0_4_2_0()); }
	':'
	{ after(grammarAccess.getParamListAccess().getColonKeyword_0_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_0_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_0_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getTypesAssignment_0_4_2_1()); }
	(rule__ParamList__TypesAssignment_0_4_2_1)
	{ after(grammarAccess.getParamListAccess().getTypesAssignment_0_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_1__0__Impl
	rule__ParamList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getParamListAction_1_0()); }
	()
	{ after(grammarAccess.getParamListAccess().getParamListAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_1__1__Impl
	rule__ParamList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getParamListAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getParamListAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Out__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Out__Group__0__Impl
	rule__Out__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutAccess().getOutKeyword_0()); }
	'out'
	{ after(grammarAccess.getOutAccess().getOutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Out__Group__1__Impl
	rule__Out__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutAccess().getExpressionAssignment_1()); }
	(rule__Out__ExpressionAssignment_1)
	{ after(grammarAccess.getOutAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Out__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutAccess().getGroup_2()); }
	(rule__Out__Group_2__0)?
	{ after(grammarAccess.getOutAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Out__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Out__Group_2__0__Impl
	rule__Out__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutAccess().getAsKeyword_2_0()); }
	'as'
	{ after(grammarAccess.getOutAccess().getAsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Out__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutAccess().getNameAssignment_2_1()); }
	(rule__Out__NameAssignment_2_1)
	{ after(grammarAccess.getOutAccess().getNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__In__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__In__Group__0__Impl
	rule__In__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__In__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInAccess().getInKeyword_0()); }
	'in'
	{ after(grammarAccess.getInAccess().getInKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__In__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__In__Group__1__Impl
	rule__In__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__In__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInAccess().getNameAssignment_1()); }
	(rule__In__NameAssignment_1)
	{ after(grammarAccess.getInAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__In__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__In__Group__2__Impl
	rule__In__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__In__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getInAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__In__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__In__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__In__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInAccess().getTypeAssignment_3()); }
	(rule__In__TypeAssignment_3)
	{ after(grammarAccess.getInAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_0_0()); }
	(rule__Expression__Group_0_0__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__1__Impl
	rule__Expression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getInfixAssignment_0_1()); }
	(rule__Expression__InfixAssignment_0_1)
	{ after(grammarAccess.getExpressionAccess().getInfixAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__2__Impl
	rule__Expression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_0_2()); }
	(rule__Expression__Group_0_2__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_0_3()); }
	(rule__Expression__Group_0_3__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_0__0__Impl
	rule__Expression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfKeyword_0_0_0()); }
	'if'
	{ after(grammarAccess.getExpressionAccess().getIfKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_0__1__Impl
	rule__Expression__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getInfixAssignment_0_0_1()); }
	(rule__Expression__InfixAssignment_0_0_1)
	{ after(grammarAccess.getExpressionAccess().getInfixAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenKeyword_0_0_2()); }
	'then'
	{ after(grammarAccess.getExpressionAccess().getThenKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_2__0__Impl
	rule__Expression__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getElseKeyword_0_2_0()); }
	'else'
	{ after(grammarAccess.getExpressionAccess().getElseKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_2__1__Impl
	rule__Expression__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_0_2_1()); }
	(rule__Expression__Group_0_2_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getInfixAssignment_0_2_2()); }
	(rule__Expression__InfixAssignment_0_2_2)
	{ after(grammarAccess.getExpressionAccess().getInfixAssignment_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_2_1__0__Impl
	rule__Expression__Group_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIfKeyword_0_2_1_0()); }
	'if'
	{ after(grammarAccess.getExpressionAccess().getIfKeyword_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_2_1__1__Impl
	rule__Expression__Group_0_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getInfixAssignment_0_2_1_1()); }
	(rule__Expression__InfixAssignment_0_2_1_1)
	{ after(grammarAccess.getExpressionAccess().getInfixAssignment_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getThenKeyword_0_2_1_2()); }
	'then'
	{ after(grammarAccess.getExpressionAccess().getThenKeyword_0_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_3__0__Impl
	rule__Expression__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getColonKeyword_0_3_0()); }
	':'
	{ after(grammarAccess.getExpressionAccess().getColonKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getTypeAssignment_0_3_1()); }
	(rule__Expression__TypeAssignment_0_3_1)
	{ after(grammarAccess.getExpressionAccess().getTypeAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
	{ after(grammarAccess.getExpressionAccess().getIDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getExpressionAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_1_2()); }
	ruleexpression
	{ after(grammarAccess.getExpressionAccess().getExpressionParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpInfix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpInfix__Group__0__Impl
	rule__ExpInfix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpInfixAccess().getUnaryAssignment_0()); }
	(rule__ExpInfix__UnaryAssignment_0)
	{ after(grammarAccess.getExpInfixAccess().getUnaryAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpInfix__Group__1__Impl
	rule__ExpInfix__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpInfixAccess().getGroup_1()); }
	(rule__ExpInfix__Group_1__0)*
	{ after(grammarAccess.getExpInfixAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpInfix__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpInfixAccess().getGroup_2()); }
	(rule__ExpInfix__Group_2__0)?
	{ after(grammarAccess.getExpInfixAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpInfix__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpInfix__Group_1__0__Impl
	rule__ExpInfix__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpInfixAccess().getOperatorAssignment_1_0()); }
	(rule__ExpInfix__OperatorAssignment_1_0)
	{ after(grammarAccess.getExpInfixAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpInfix__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpInfixAccess().getUnaryAssignment_1_1()); }
	(rule__ExpInfix__UnaryAssignment_1_1)
	{ after(grammarAccess.getExpInfixAccess().getUnaryAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpInfix__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpInfix__Group_2__0__Impl
	rule__ExpInfix__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpInfixAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getExpInfixAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpInfix__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpInfixAccess().getTypeAssignment_2_1()); }
	(rule__ExpInfix__TypeAssignment_2_1)
	{ after(grammarAccess.getExpInfixAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpUnary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnary__Group__0__Impl
	rule__ExpUnary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnaryAccess().getOperatorAssignment_0()); }
	(rule__ExpUnary__OperatorAssignment_0)?
	{ after(grammarAccess.getExpUnaryAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnary__Group__1__Impl
	rule__ExpUnary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnaryAccess().getValueAssignment_1()); }
	(rule__ExpUnary__ValueAssignment_1)
	{ after(grammarAccess.getExpUnaryAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnary__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnaryAccess().getGroup_2()); }
	(rule__ExpUnary__Group_2__0)?
	{ after(grammarAccess.getExpUnaryAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpUnary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnary__Group_2__0__Impl
	rule__ExpUnary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnaryAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getExpUnaryAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpUnary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpUnaryAccess().getTypeAssignment_2_1()); }
	(rule__ExpUnary__TypeAssignment_2_1)
	{ after(grammarAccess.getExpUnaryAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpFunc__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0__0__Impl
	rule__ExpFunc__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getNameAssignment_0_0()); }
	(rule__ExpFunc__NameAssignment_0_0)
	{ after(grammarAccess.getExpFuncAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0__1__Impl
	rule__ExpFunc__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getExpFuncAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0__2__Impl
	rule__ExpFunc__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getGroup_0_2()); }
	(rule__ExpFunc__Group_0_2__0)?
	{ after(grammarAccess.getExpFuncAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0__3__Impl
	rule__ExpFunc__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getExpFuncAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getGroup_0_4()); }
	(rule__ExpFunc__Group_0_4__0)?
	{ after(grammarAccess.getExpFuncAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpFunc__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0_2__0__Impl
	rule__ExpFunc__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getParamsAssignment_0_2_0()); }
	(rule__ExpFunc__ParamsAssignment_0_2_0)
	{ after(grammarAccess.getExpFuncAccess().getParamsAssignment_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getGroup_0_2_1()); }
	(rule__ExpFunc__Group_0_2_1__0)*
	{ after(grammarAccess.getExpFuncAccess().getGroup_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpFunc__Group_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0_2_1__0__Impl
	rule__ExpFunc__Group_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getCommaKeyword_0_2_1_0()); }
	','
	{ after(grammarAccess.getExpFuncAccess().getCommaKeyword_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getParamsAssignment_0_2_1_1()); }
	(rule__ExpFunc__ParamsAssignment_0_2_1_1)
	{ after(grammarAccess.getExpFuncAccess().getParamsAssignment_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpFunc__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0_4__0__Impl
	rule__ExpFunc__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getColonKeyword_0_4_0()); }
	':'
	{ after(grammarAccess.getExpFuncAccess().getColonKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getTypeAssignment_0_4_1()); }
	(rule__ExpFunc__TypeAssignment_0_4_1)
	{ after(grammarAccess.getExpFuncAccess().getTypeAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpFunc__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_1__0__Impl
	rule__ExpFunc__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getNameAssignment_1_0()); }
	(rule__ExpFunc__NameAssignment_1_0)
	{ after(grammarAccess.getExpFuncAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getGroup_1_1()); }
	(rule__ExpFunc__Group_1_1__0)?
	{ after(grammarAccess.getExpFuncAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpFunc__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_1_1__0__Impl
	rule__ExpFunc__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getColonKeyword_1_1_0()); }
	':'
	{ after(grammarAccess.getExpFuncAccess().getColonKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpFunc__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpFuncAccess().getTypeAssignment_1_1_1()); }
	(rule__ExpFunc__TypeAssignment_1_1_1)
	{ after(grammarAccess.getExpFuncAccess().getTypeAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
	{ after(grammarAccess.getTypeAccess().getIDTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
	rule__Type__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLessThanSignKeyword_0_1()); }
	'<'
	{ after(grammarAccess.getTypeAccess().getLessThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__2__Impl
	rule__Type__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeParserRuleCall_0_2()); }
	ruletype
	{ after(grammarAccess.getTypeAccess().getTypeParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__3__Impl
	rule__Type__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_0_3()); }
	(rule__Type__Group_0_3__0)*
	{ after(grammarAccess.getTypeAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_0_4()); }
	'>'
	{ after(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0_3__0__Impl
	rule__Type__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getTypeAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeParserRuleCall_0_3_1()); }
	ruletype
	{ after(grammarAccess.getTypeAccess().getTypeParserRuleCall_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__SpecAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSpecStatementParserRuleCall_0()); }
		rulestatement
		{ after(grammarAccess.getModelAccess().getSpecStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__DefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getDefIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefinitionAccess().getDefIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ParamListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getParamListParamListParserRuleCall_2_0()); }
		ruleparamList
		{ after(grammarAccess.getDefinitionAccess().getParamListParamListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getTypeTypeParserRuleCall_3_1_0()); }
		ruletype
		{ after(grammarAccess.getDefinitionAccess().getTypeTypeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ExpressionAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getExpressionExpressionParserRuleCall_5_0_0()); }
		ruleexpression
		{ after(grammarAccess.getDefinitionAccess().getExpressionExpressionParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__StatementsAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getStatementsStatementParserRuleCall_5_1_1_0()); }
		rulestatement
		{ after(grammarAccess.getDefinitionAccess().getStatementsStatementParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ExpressionAssignment_5_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getExpressionExpressionParserRuleCall_5_1_2_0()); }
		ruleexpression
		{ after(grammarAccess.getDefinitionAccess().getExpressionExpressionParserRuleCall_5_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__ParamsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamListAccess().getParamsIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getParamListAccess().getParamsIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__TypesAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamListAccess().getTypesTypeParserRuleCall_0_3_1_0()); }
		ruletype
		{ after(grammarAccess.getParamListAccess().getTypesTypeParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__ParamsAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamListAccess().getParamsIDTerminalRuleCall_0_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParamListAccess().getParamsIDTerminalRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__TypesAssignment_0_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamListAccess().getTypesTypeParserRuleCall_0_4_2_1_0()); }
		ruletype
		{ after(grammarAccess.getParamListAccess().getTypesTypeParserRuleCall_0_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getOutAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Out__NameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutAccess().getNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOutAccess().getNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__In__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__In__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInAccess().getTypeTypeParserRuleCall_3_0()); }
		ruletype
		{ after(grammarAccess.getInAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__InfixAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getInfixExpInfixParserRuleCall_0_0_1_0()); }
		ruleexpInfix
		{ after(grammarAccess.getExpressionAccess().getInfixExpInfixParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__InfixAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getInfixExpInfixParserRuleCall_0_1_0()); }
		ruleexpInfix
		{ after(grammarAccess.getExpressionAccess().getInfixExpInfixParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__InfixAssignment_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getInfixExpInfixParserRuleCall_0_2_1_1_0()); }
		ruleexpInfix
		{ after(grammarAccess.getExpressionAccess().getInfixExpInfixParserRuleCall_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__InfixAssignment_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getInfixExpInfixParserRuleCall_0_2_2_0()); }
		ruleexpInfix
		{ after(grammarAccess.getExpressionAccess().getInfixExpInfixParserRuleCall_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TypeAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getTypeTypeParserRuleCall_0_3_1_0()); }
		ruletype
		{ after(grammarAccess.getExpressionAccess().getTypeTypeParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__UnaryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpInfixAccess().getUnaryExpUnaryParserRuleCall_0_0()); }
		ruleexpUnary
		{ after(grammarAccess.getExpInfixAccess().getUnaryExpUnaryParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpInfixAccess().getOperatorInfixOperatorParserRuleCall_1_0_0()); }
		ruleinfixOperator
		{ after(grammarAccess.getExpInfixAccess().getOperatorInfixOperatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__UnaryAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpInfixAccess().getUnaryExpUnaryParserRuleCall_1_1_0()); }
		ruleexpUnary
		{ after(grammarAccess.getExpInfixAccess().getUnaryExpUnaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpInfix__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpInfixAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruletype
		{ after(grammarAccess.getExpInfixAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpUnaryAccess().getOperatorUnaryOperatorParserRuleCall_0_0()); }
		ruleunaryOperator
		{ after(grammarAccess.getExpUnaryAccess().getOperatorUnaryOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpUnaryAccess().getValueExpFuncParserRuleCall_1_0()); }
		ruleexpFunc
		{ after(grammarAccess.getExpUnaryAccess().getValueExpFuncParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpUnary__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpUnaryAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruletype
		{ after(grammarAccess.getExpUnaryAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpFuncAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getExpFuncAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__ParamsAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpFuncAccess().getParamsExpressionParserRuleCall_0_2_0_0()); }
		ruleexpression
		{ after(grammarAccess.getExpFuncAccess().getParamsExpressionParserRuleCall_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__ParamsAssignment_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpFuncAccess().getParamsExpressionParserRuleCall_0_2_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getExpFuncAccess().getParamsExpressionParserRuleCall_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__TypeAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpFuncAccess().getTypeTypeParserRuleCall_0_4_1_0()); }
		ruletype
		{ after(grammarAccess.getExpFuncAccess().getTypeTypeParserRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpFuncAccess().getNameExpLitParserRuleCall_1_0_0()); }
		ruleexpLit
		{ after(grammarAccess.getExpFuncAccess().getNameExpLitParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpFunc__TypeAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpFuncAccess().getTypeTypeParserRuleCall_1_1_1_0()); }
		ruletype
		{ after(grammarAccess.getExpFuncAccess().getTypeTypeParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
